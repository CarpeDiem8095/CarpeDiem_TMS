<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="note.mapper">

	<resultMap type="com.cp.tms.dto.NoteDto" id="noDto">
		<result property="note_seq" column="NOTE_SEQ" />
		<result property="email" column="EMAIL" />
		<result property="note_title" column="NOTE_TITLE" />
		<collection property="odto" resultMap="oeDto" />
	</resultMap>

	<resultMap type="com.cp.tms.dto.OnedayDto" id="oeDto">
		<result property="oneday_seq" column="ONEDAY_SEQ" />
		<!-- <result property="note_seq" column="NOTE_SEQ"/> -->
		<result property="oneday_delflag" column="ONEDAY_DELFLAG" />
		<result property="oneday_title" column="ONEDAY_TITLE" />
		<result property="onedate" column="ONEDATE" />
	</resultMap>
	
	<!-- "노트 상세조회 -->
	<!-- (해당하는 내 노트의 모든 하루일정의 제목과 날짜 조회)" -->
	<select id="selDetailNote" parameterType="java.lang.String"
		resultMap="noDto">
		SELECT n.NOTE_SEQ, n.NOTE_TITLE , n.EMAIL, o.ONEDAY_TITLE,
		o.ONEDAY_SEQ , o.ONEDATE, o.ONEDAY_DELFLAG
		FROM NOTE n JOIN ONEDAY o
		ON n.NOTE_SEQ = o.NOTE_SEQ
		WHERE n.NOTE_SEQ=#{seq}
		and o.ONEDAY_DELFLAG='N'
		ORDER BY o.ONEDAY_SEQ DESC
	</select>

	<!-- 노트 생성 -->
	<insert id="writeNote" parameterType="nDto">
		INSERT INTO NOTE
		(NOTE_SEQ,
		EMAIL, NOTE_DEL, NOTE_READCNT, NOTE_TITLE, NOTE_REGDATE)
		VALUES(SEQ_NOTE.NEXTVAL, #{email}, 'N', 0, #{note_title}, SYSDATE)
	</insert>

	<!-- 내 노트 전체 조회 --><!-- 이메일 넣어야함 -->
	<select id="selAllNote" parameterType="java.lang.String"
		resultType="nDto">
		SELECT NOTE_SEQ, NOTE_TITLE
		FROM NOTE
		WHERE EMAIL = #{email} AND NOTE_DEL = 'N'
		ORDER BY NOTE_SEQ desc
	</select>


	<!-- 노트 제목 수정 -->
	<update id="modifyNote" parameterType="nDto">
		UPDATE NOTE
		SET
		NOTE_TITLE=#{note_title}
		WHERE NOTE_SEQ=#{note_seq} AND EMAIL=#{email}
	</update>

	<!-- 노트 삭제 -->
	<update id="delOneNote" parameterType="java.util.Map">
		UPDATE NOTE
		SET
		NOTE_DEL='Y'
		WHERE NOTE_SEQ=#{note_seq} AND EMAIL = #{email}
	</update>

	<!-- 노트 다중 삭제 -->
	<update id="delMultiNote" parameterType="java.lang.String">
		UPDATE NOTE
		SET NOTE_DEL='Y'
		WHERE NOTE_SEQ IN
		<foreach item="seq" collection="seqs" open="(" separator=","
			close=")">
			#{seq}
		</foreach>
	</update>

	<!-- 노트 페이징 -->
	<select id="selPagingNote" parameterType="java.util.Map"
		resultType="nDto">
		SELECT NOTE_SEQ, EMAIL, NOTE_DEL, NOTE_READCNT, NOTE_TITLE,
		NOTE_REGDATE
		FROM (SELECT NOTE_SEQ, EMAIL, NOTE_DEL, NOTE_READCNT,
		NOTE_TITLE, NOTE_REGDATE,
		ROW_NUMBER() OVER(ORDER BY NOTE_SEQ DESC) RN
		FROM NOTE
		WHERE EMAIL = #{email} AND NOTE_DEL = 'N'
		)
		WHERE RN BETWEEN #{first} AND #{last}
	</select>

	<!-- 노트의 총 개수 -->
	<select id="countNote" resultType="java.lang.Integer" parameterType="java.lang.String">
		SELECT COUNT(*)
		FROM NOTE
		WHERE
		NOTE_DEL = 'N' AND EMAIL= #{email}
	</select>

</mapper>
